{"version":3,"sources":["store/index.ts","api/api.ts","components/Header/Header.tsx","store/selectors.ts","components/Main/Exchange/Exchange.tsx","components/Main/ExchangeRate/ExchangeRate.tsx","components/Main/Home/Home.tsx","App.tsx","index.tsx"],"names":["ActionType","getData","a","fetch","response","json","Header","useState","activeBtn","setActiveBtn","className","classnames","exchange__link_active","to","onClick","getExchange","state","exchange","Exchange","useSelector","inputValue","setInputValue","rezult","setRezult","error","setError","active","setActive","value","inputVal","test","split","join","exportMoney","myArr","Number","UAH","USD","EUR","type","onKeyDown","e","key","onChange","event","target","toFixed","ExchangeRate","selectValue","setSelectValue","map","item","toUpperCase","Home","setExchange","createAction","SET_EXCHANGE","reducer","createReducer","builder","addCase","action","payload","store","configureStore","App","dispatch","useDispatch","useEffect","rates","alert","loadDataFromServer","path","element","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f7c9d8a.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-shadow */\nimport { configureStore, createAction, createReducer } from '@reduxjs/toolkit';\n\nenum ActionType {\n  SET_EXCHANGE = 'SET_EXCHANGE',\n}\n\nconst InitialState = {\n  exchange: {},\n};\n\nexport const setExchange = createAction<Exchange>(ActionType.SET_EXCHANGE);\n\nconst reducer = createReducer(InitialState, (builder) => {\n  builder.addCase(setExchange, (state, action:any) => {\n    // eslint-disable-next-line no-param-reassign\n    state.exchange = action.payload;\n  });\n});\n\nexport const store = configureStore({\n  reducer,\n});\n","const API = 'https://api.exchangerate.host/latest';\n\nexport const getData = async () => {\n  const response = await fetch(API);\n\n  return response.json();\n};\n","/* eslint-disable jsx-a11y/tabindex-no-positive */\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport './Header.scss';\n\nexport const Header: React.FC = () => {\n  const [activeBtn, setActiveBtn] = useState('');\n\n  return (\n    <div className=\"exchange\">\n      <Link\n        className={classnames('exchange__link', { exchange__link_active: activeBtn === 'Exchange' })}\n        to=\"exchange\"\n        onClick={() => setActiveBtn('Exchange')}\n      >\n        Exchange\n      </Link>\n      <Link\n        className={classnames('exchange__link', { exchange__link_active: activeBtn === 'ExchangeRate' })}\n        to=\"exchange_rate\"\n        onClick={() => setActiveBtn('ExchangeRate')}\n      >\n        Exchange rate\n      </Link>\n    </div>\n  );\n};\n","export const getExchange = (state: State) => state.exchange;\n","/* eslint-disable no-else-return */\n/* eslint-disable consistent-return */\n/* eslint-disable react/no-unescaped-entities */\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport classnames from 'classnames';\nimport { getExchange } from '../../../store/selectors';\nimport './Exchange.scss';\n\nexport const Exchange: React.FC = () => {\n  const exchange = useSelector(getExchange);\n  const [inputValue, setInputValue] = useState<string>('');\n  const [rezult, setRezult] = useState<number>();\n  const [error, setError] = useState('');\n  const [active, setActive] = useState(false);\n\n  const value = (inputVal:string) => {\n    const regExp = /^\"{1}[0-9]+\\s+(usd|eur|uah)+\"{1}\\s(in)\\s\"{1}(usd|eur|uah)\"{1}$/;\n\n    if (regExp.test(inputVal)) {\n      setActive(true);\n      setError('');\n\n      return inputVal.split('\"').join('').split(' ');\n    } else {\n      setActive(false);\n    }\n  };\n\n  const exportMoney = () => {\n    const myArr = value(inputValue);\n\n    if (myArr) {\n      if (myArr[1] === 'uah' && myArr[3] === 'usd') {\n        setRezult((Number(myArr[0]) / exchange.UAH) * exchange.USD);\n      } else if (myArr[1] === 'uah' && myArr[3] === 'eur') {\n        setRezult((Number(myArr[0]) / exchange.UAH) * exchange.EUR);\n      } else if (myArr[1] === 'eur' && myArr[3] === 'usd') {\n        setRezult(Number(myArr[0]) * exchange.USD);\n      } else if (myArr[1] === 'eur' && myArr[3] === 'uah') {\n        setRezult(Number(myArr[0]) * exchange.UAH);\n      } else if (myArr[1] === 'usd' && myArr[3] === 'uah') {\n        setRezult((Number(myArr[0]) / exchange.USD) * exchange.UAH);\n      } else if (myArr[1] === 'usd' && myArr[3] === 'eur') {\n        setRezult(Number(myArr[0]) / exchange.USD);\n      } else {\n        setError('Write correct rate!!!!');\n      }\n    } else {\n      setError('Write correct value!!!!');\n    }\n  };\n\n  return (\n    <div className=\"exchanges\">\n      <p className=\"exchanges__title\">Enter a value in the format \"100 usd\" in \"uah\"</p>\n      <input\n        className=\"exchanges__input input is-primary\"\n        type=\"text\"\n        value={inputValue}\n        onKeyDown={e => e.key === 'Enter' && (exportMoney())}\n        onChange={(event) => {\n          setInputValue(event.target.value);\n          value(event.target.value);\n        }}\n      />\n      {\n        error !== '' && (\n          <p>{error}</p>\n        )\n      }\n      <button\n        className={classnames('exchanges__button button is-primary', { 'is-danger': !active })}\n        type=\"button\"\n        onClick={() => {\n          exportMoney();\n        }}\n      >\n        {active ? 'Exchange' : 'Write value in input'}\n      </button>\n      <p className=\"exchanges__total\">{rezult?.toFixed(2)}</p>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getExchange } from '../../../store/selectors';\nimport './ExchangeRate.scss';\n\nexport const ExchangeRate: React.FC = () => {\n  const exchange = useSelector(getExchange);\n  const arrOfRate = ['usd', 'eur', 'uah'];\n  const [selectValue, setSelectValue] = useState('usd');\n\n  return (\n    <div className=\"rate\">\n      <div className=\"rate__left_side\">\n        <select\n          className=\"rate__select\"\n          value={selectValue}\n          onChange={(event) => setSelectValue(event.target.value)}\n        >\n          {\n            arrOfRate.map(item => <option key={item} value={item}>{item.toUpperCase()}</option>)\n          }\n        </select>\n      </div>\n      <div className=\"rate__right_side\">\n        {\n          selectValue === 'usd' && (\n            <div className=\"rate__exchange_box\">\n              <p>{`1 USD = ${(1 / exchange.USD).toFixed(2)} EUR`}</p>\n              <p>{`1 USD = ${((1 / exchange.USD) * exchange.UAH).toFixed(2)} UAH`}</p>\n            </div>\n          )\n        }\n\n        {\n          selectValue === 'uah' && (\n            <div className=\"rate__exchange_box\">\n              <p>{`1 UAH = ${((1 / exchange.UAH) * exchange.EUR).toFixed(2)} EUR`}</p>\n              <p>{`1 UAH = ${((1 / exchange.UAH) * exchange.USD).toFixed(2)} USD`}</p>\n            </div>\n          )\n        }\n\n        {\n          selectValue === 'eur' && (\n            <div className=\"rate__exchange_box\">\n              <p>{`1 EUR = ${(exchange.UAH).toFixed(2)} UAH`}</p>\n              <p>{`1 EUR = ${(exchange.USD).toFixed(2)} USD`}</p>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Home.scss';\n\nexport const Home: React.FC = () => {\n  return (\n    <div className=\"home\">\n      <p className=\"home__title\">Choose what you want !!!</p>\n    </div>\n  );\n};\n","/* eslint-disable no-alert */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { getData } from './api/api';\nimport './App.scss';\nimport { Header } from './components/Header';\nimport { Exchange } from './components/Main/Exchange';\nimport { ExchangeRate } from './components/Main/ExchangeRate';\nimport { Home } from './components/Main/Home';\nimport { setExchange } from './store';\nimport { getExchange } from './store/selectors';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const exchange = useSelector(getExchange);\n\n  useEffect(() => {\n    const loadDataFromServer = async () => {\n      try {\n        const response = await getData();\n\n        dispatch(setExchange(response.rates));\n      } catch (error) {\n        alert('Error try again');\n      }\n    };\n\n    loadDataFromServer();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      { !exchange && (\n        <p>Loading...</p>\n      )}\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"exchange\" element={<Exchange />} />\n        <Route path=\"exchange_rate\" element={<ExchangeRate />} />\n      </Routes>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\nimport { store } from './store';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}